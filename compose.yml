services:
  db:
    image: postgres:16
    container_name: crm_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "127.0.0.1:5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --dbname=postgres --username=postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7
    container_name: crm_redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    build: ./backend
    container_name: crm_backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/postgres
      FLASK_ENV: production
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_BACKEND: redis://redis:6379/1
    volumes:
      - backend_storage:/app/storage
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  worker:
    build: ./backend
    container_name: crm_worker
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/postgres
      FLASK_ENV: production
    command: celery -A wsgi.celery worker --loglevel=info
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: crm_nginx
    restart: unless-stopped
    ports:
      - "127.0.0.1:8383:80"
    depends_on:
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backup:
    build:
      context: ./backuper
    container_name: crm_backup
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - backend_storage:/data_to_backup:ro
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
  backend_storage:
